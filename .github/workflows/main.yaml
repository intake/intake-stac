name: CI

on:
  push:
    branches: "*"
  pull_request:
    branches: master


jobs:
  lint-black:
    name: black-formatter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install Black
        run: |
          python -m pip install black
      - name: Black Code Formatter
        run: |
          black --check .

  lint-flake8:
    name: flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install Flake8
        run: |
          python -m pip install flake8
      - name: Flake8 check
        run: |
          flake8 .
  lint-isort:
    name: isort
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install isort
        run: |
          python -m pip install isort
      - name: isort check
        run: |
          isort --recursive --check-only .

  docs:
    name: Documentation build
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('docs/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install intake-stac
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .

    - name: Install doc dependencies
      run: python -m pip install -r docs/requirements.txt

    - name: Build docs
      run: |
        cd docs
        make html

  test:
    name: ${{ matrix.CONDA_ENV }}-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        CONDA_ENV: [3.6, 3.7, 3.7-upstream]
    steps:
      - uses: actions/checkout@v1

      - name: Setup conda environment
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          conda env create -n test_env --file ci/environment-dev-${{ matrix.CONDA_ENV }}.yml --quiet
          source activate test_env
          python -m pip install --no-deps -e .
          conda list

      - name: Running Tests
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          source activate test_env
          pytest --verbose --junitxml=test-reports/junit.xml --cov=intake_stac --cov-config ci/.coveragerc --cov-report term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: test-reports/junit.xml
